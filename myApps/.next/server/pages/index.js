/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./styles/Home.module.css":
/*!********************************!*\
  !*** ./styles/Home.module.css ***!
  \********************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"main\": \"Home_main__nLjiQ\",\n\t\"footer\": \"Home_footer____T7K\",\n\t\"image\": \"Home_image__yn5pu\",\n\t\"title\": \"Home_title__T09hD\",\n\t\"description\": \"Home_description__41Owk\",\n\t\"button\": \"Home_button__Zs7A2\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvSG9tZS5tb2R1bGUuY3NzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL3N0eWxlcy9Ib21lLm1vZHVsZS5jc3M/NzEyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IHtcblx0XCJtYWluXCI6IFwiSG9tZV9tYWluX19uTGppUVwiLFxuXHRcImZvb3RlclwiOiBcIkhvbWVfZm9vdGVyX19fX1Q3S1wiLFxuXHRcImltYWdlXCI6IFwiSG9tZV9pbWFnZV9feW41cHVcIixcblx0XCJ0aXRsZVwiOiBcIkhvbWVfdGl0bGVfX1QwOWhEXCIsXG5cdFwiZGVzY3JpcHRpb25cIjogXCJIb21lX2Rlc2NyaXB0aW9uX180MU93a1wiLFxuXHRcImJ1dHRvblwiOiBcIkhvbWVfYnV0dG9uX19aczdBMlwiXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./styles/Home.module.css\n");

/***/ }),

/***/ "./constants/index.js":
/*!****************************!*\
  !*** ./constants/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WHITELIST_CONTRACT_ADDRESS\": () => (/* binding */ WHITELIST_CONTRACT_ADDRESS),\n/* harmony export */   \"abi\": () => (/* binding */ abi)\n/* harmony export */ });\nconst WHITELIST_CONTRACT_ADDRESS = \"0x07f3C26D08EB4a326882ab2f6de6ecFF51d7E761\";\nconst abi = [\n    {\n        inputs: [\n            {\n                internalType: \"uint8\",\n                name: \"_maxWhitelistedAddress\",\n                type: \"uint8\"\n            }, \n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }, \n        ],\n        name: \"WhitelistedAddress\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\"\n            }, \n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"addAddressToWhitelist\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"numAddressWhitelisted\",\n        outputs: [\n            {\n                internalType: \"uint8\",\n                name: \"\",\n                type: \"uint8\"\n            }, \n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    }, \n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb25zdGFudHMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSwwQkFBMEIsR0FBRyw0Q0FBNEMsQ0FBQztBQUNoRixNQUFNQyxHQUFHLEdBQUc7SUFDakI7UUFDRUMsTUFBTSxFQUFFO1lBQ047Z0JBQ0VDLFlBQVksRUFBRSxPQUFPO2dCQUNyQkMsSUFBSSxFQUFFLHdCQUF3QjtnQkFDOUJDLElBQUksRUFBRSxPQUFPO2FBQ2Q7U0FDRjtRQUNEQyxlQUFlLEVBQUUsWUFBWTtRQUM3QkQsSUFBSSxFQUFFLGFBQWE7S0FDcEI7SUFDRDtRQUNFSCxNQUFNLEVBQUU7WUFDTjtnQkFDRUMsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCQyxJQUFJLEVBQUUsRUFBRTtnQkFDUkMsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNERCxJQUFJLEVBQUUsb0JBQW9CO1FBQzFCRyxPQUFPLEVBQUU7WUFDUDtnQkFDRUosWUFBWSxFQUFFLE1BQU07Z0JBQ3BCQyxJQUFJLEVBQUUsRUFBRTtnQkFDUkMsSUFBSSxFQUFFLE1BQU07YUFDYjtTQUNGO1FBQ0RDLGVBQWUsRUFBRSxNQUFNO1FBQ3ZCRCxJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0VILE1BQU0sRUFBRSxFQUFFO1FBQ1ZFLElBQUksRUFBRSx1QkFBdUI7UUFDN0JHLE9BQU8sRUFBRSxFQUFFO1FBQ1hELGVBQWUsRUFBRSxZQUFZO1FBQzdCRCxJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0VILE1BQU0sRUFBRSxFQUFFO1FBQ1ZFLElBQUksRUFBRSx1QkFBdUI7UUFDN0JHLE9BQU8sRUFBRTtZQUNQO2dCQUNFSixZQUFZLEVBQUUsT0FBTztnQkFDckJDLElBQUksRUFBRSxFQUFFO2dCQUNSQyxJQUFJLEVBQUUsT0FBTzthQUNkO1NBQ0Y7UUFDREMsZUFBZSxFQUFFLE1BQU07UUFDdkJELElBQUksRUFBRSxVQUFVO0tBQ2pCO0NBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LWFwcC8uL2NvbnN0YW50cy9pbmRleC5qcz8zNzM3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBXSElURUxJU1RfQ09OVFJBQ1RfQUREUkVTUyA9IFwiMHgwN2YzQzI2RDA4RUI0YTMyNjg4MmFiMmY2ZGU2ZWNGRjUxZDdFNzYxXCI7XHJcbmV4cG9ydCBjb25zdCBhYmkgPSBbXHJcbiAge1xyXG4gICAgaW5wdXRzOiBbXHJcbiAgICAgIHtcclxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDhcIixcclxuICAgICAgICBuYW1lOiBcIl9tYXhXaGl0ZWxpc3RlZEFkZHJlc3NcIixcclxuICAgICAgICB0eXBlOiBcInVpbnQ4XCIsXHJcbiAgICAgIH0sXHJcbiAgICBdLFxyXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcclxuICAgIHR5cGU6IFwiY29uc3RydWN0b3JcIixcclxuICB9LFxyXG4gIHtcclxuICAgIGlucHV0czogW1xyXG4gICAgICB7XHJcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcclxuICAgICAgICBuYW1lOiBcIlwiLFxyXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxyXG4gICAgICB9LFxyXG4gICAgXSxcclxuICAgIG5hbWU6IFwiV2hpdGVsaXN0ZWRBZGRyZXNzXCIsXHJcbiAgICBvdXRwdXRzOiBbXHJcbiAgICAgIHtcclxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYm9vbFwiLFxyXG4gICAgICAgIG5hbWU6IFwiXCIsXHJcbiAgICAgICAgdHlwZTogXCJib29sXCIsXHJcbiAgICAgIH0sXHJcbiAgICBdLFxyXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcclxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcclxuICB9LFxyXG4gIHtcclxuICAgIGlucHV0czogW10sXHJcbiAgICBuYW1lOiBcImFkZEFkZHJlc3NUb1doaXRlbGlzdFwiLFxyXG4gICAgb3V0cHV0czogW10sXHJcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxyXG4gICAgdHlwZTogXCJmdW5jdGlvblwiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaW5wdXRzOiBbXSxcclxuICAgIG5hbWU6IFwibnVtQWRkcmVzc1doaXRlbGlzdGVkXCIsXHJcbiAgICBvdXRwdXRzOiBbXHJcbiAgICAgIHtcclxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDhcIixcclxuICAgICAgICBuYW1lOiBcIlwiLFxyXG4gICAgICAgIHR5cGU6IFwidWludDhcIixcclxuICAgICAgfSxcclxuICAgIF0sXHJcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxyXG4gICAgdHlwZTogXCJmdW5jdGlvblwiLFxyXG4gIH0sXHJcbl07XHJcbiJdLCJuYW1lcyI6WyJXSElURUxJU1RfQ09OVFJBQ1RfQUREUkVTUyIsImFiaSIsImlucHV0cyIsImludGVybmFsVHlwZSIsIm5hbWUiLCJ0eXBlIiwic3RhdGVNdXRhYmlsaXR5Iiwib3V0cHV0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./constants/index.js\n");

/***/ }),

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../styles/Home.module.css */ \"./styles/Home.module.css\");\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3modal */ \"web3modal\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants */ \"./constants/index.js\");\n// import Head from \"next/head\";\n// import styles from \"../styles/Home.module.css\";\n// import Web3Modal from \"web3modal\";\n// import { providers, Contract } from \"ethers\";\n// import { useEffect, useRef, useState } from \"react\";\n// import { WHITELIST_CONTRACT_ADDRESS, abi } from \"../constants\";\n// export default function Home() {\n//   // walletConnected keep track of whether the user's wallet is connected or not\n//   const [walletConnected, setWalletConnected] = useState(false);\n//   // joinedWhitelist keeps track of whether the current metamask address has joined the Whitelist or not\n//   const [joinedWhitelist, setJoinedWhitelist] = useState(false);\n//   // loading is set to true when we are waiting for a transaction to get mined\n//   const [loading, setLoading] = useState(false);\n//   // numberOfWhitelisted tracks the number of addresses's whitelisted\n//   const [numberOfWhitelisted, setNumberOfWhitelisted] = useState(0);\n//   // Create a reference to the Web3 Modal (used for connecting to Metamask) which persists as long as the page is open\n//   const web3ModalRef = useRef();\n//   // const [web3ModalState, setWeb3ModalState] = useState();\n//   /**\n//    * Returns a Provider or Signer object representing the Ethereum RPC with or without the\n//    * signing capabilities of metamask attached\n//    *\n//    * A `Provider` is needed to interact with the blockchain - reading transactions, reading balances, reading state, etc.\n//    *\n//    * A `Signer` is a special type of Provider used in case a `write` transaction needs to be made to the blockchain, which involves the connected account\n//    * needing to make a digital signature to authorize the transaction being sent. Metamask exposes a Signer API to allow your website to\n//    * request signatures from the user using Signer functions.\n//    *\n//    * @param {*} needSigner - True if you need the signer, default false otherwise\n//    */\n//   const getProviderOrSigner = async (needSigner = false) => {\n//     // Connect to Metamask\n//     // Since we store `web3Modal` as a reference, we need to access the `current` value to get access to the underlying object\n//     const provider = await web3ModalRef.current.connect();\n//     // const provider = await web3ModalState.connect();\n//     const web3Provider = new providers.Web3Provider(provider);\n//     // If user is not connected to the Rinkeby network, let them know and throw an error\n//     const { chainId } = await web3Provider.getNetwork();\n//     if (chainId !== 4) {\n//       window.alert(\"Change the network to Rinkeby\");\n//       throw new Error(\"Change network to Rinkeby\");\n//     }\n//     if (needSigner) {\n//       const signer = web3Provider.getSigner();\n//       return signer;\n//     }\n//     return web3Provider;\n//   };\n//   /**\n//    * addAddressToWhitelist: Adds the current connected address to the whitelist\n//    */\n//   const addAddressToWhitelist = async () => {\n//     try {\n//       // We need a Signer here since this is a 'write' transaction.\n//       const signer = await getProviderOrSigner(true);\n//       console.log({ signer });\n//       // const address = await signer.getAddress();\n//       // console.log({ address });\n//       // Create a new instance of the Contract with a Signer, which allows\n//       // update methods\n//       const whitelistContract = new Contract(\n//         WHITELIST_CONTRACT_ADDRESS,\n//         abi,\n//         signer\n//       );\n//       // call the addAddressToWhitelist from the contract\n//       const tx = await whitelistContract.addAddressToWhitelist();\n//       setLoading(true);\n//       // // wait for the transaction to get mined\n//       await tx.wait();\n//       setLoading(false);\n//       // // get the updated number of addresses in the whitelist\n//       // await getNumberOfWhitelisted();\n//       // setJoinedWhitelist(true);\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n//   /**\n//    * getNumberOfWhitelisted:  gets the number of whitelisted addresses\n//    */\n//   // const getNumberOfWhitelisted = async () => {\n//   //   try {\n//   //     // Get the provider from web3Modal, which in our case is MetaMask\n//   //     // No need for the Signer here, as we are only reading state from the blockchain\n//   //     const provider = await getProviderOrSigner();\n//   //     // We connect to the Contract using a Provider, so we will only\n//   //     // have read-only access to the Contract\n//   //     const whitelistContract = new Contract(\n//   //       WHITELIST_CONTRACT_ADDRESS,\n//   //       abi,\n//   //       provider\n//   //     );\n//   //     // call the numAddressesWhitelisted from the contract\n//   //     const _numberOfWhitelisted = await whitelistContract.numAddressesWhitelisted();\n//   //     setNumberOfWhitelisted(_numberOfWhitelisted);\n//   //   } catch (err) {\n//   //     console.error(err);\n//   //   }\n//   // };\n//   /**\n//    * checkIfAddressInWhitelist: Checks if the address is in whitelist\n//    */\n//   // const checkIfAddressInWhitelist = async () => {\n//   //   try {\n//   //     // We will need the signer later to get the user's address\n//   //     // Even though it is a read transaction, since Signers are just special kinds of Providers,\n//   //     // We can use it in it's place\n//   //     const signer = await getProviderOrSigner(true);\n//   //     const whitelistContract = new Contract(\n//   //       WHITELIST_CONTRACT_ADDRESS,\n//   //       abi,\n//   //       signer\n//   //     );\n//   //     // Get the address associated to the signer which is connected to  MetaMask\n//   //     const address = await signer.getAddress();\n//   //     // call the whitelistedAddresses from the contract\n//   //     const _joinedWhitelist = await whitelistContract.whitelistedAddresses(\n//   //       address\n//   //     );\n//   //     setJoinedWhitelist(_joinedWhitelist);\n//   //   } catch (err) {\n//   //     console.error(err);\n//   //   }\n//   // };\n//   /*\n//     connectWallet: Connects the MetaMask wallet\n//   */\n//   const connectWallet = async () => {\n//     try {\n//       // Get the provider from web3Modal, which in our case is MetaMask\n//       // When used for the first time, it prompts the user to connect their wallet\n//       await getProviderOrSigner(true);\n//       setWalletConnected(true);\n//       // checkIfAddressInWhitelist();\n//       // getNumberOfWhitelisted();\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n//   /*\n//     renderButton: Returns a button based on the state of the dapp\n//   */\n//   const renderButton = () => {\n//     if (walletConnected) {\n//       if (joinedWhitelist) {\n//         return (\n//           <div className={styles.description}>\n//             Thanks for joining the Whitelist!\n//           </div>\n//         );\n//       } else if (loading) {\n//         return <button className={styles.button}>Loading...</button>;\n//       } else {\n//         return (\n//           // <button className={styles.button}>\n//           <button onClick={addAddressToWhitelist} className={styles.button}>\n//             Join the Whitelist\n//           </button>\n//         );\n//       }\n//     } else {\n//       return (\n//         <button onClick={connectWallet} className={styles.button}>\n//           Connect your wallet\n//         </button>\n//       );\n//     }\n//   };\n//   // useEffects are used to react to changes in state of the website\n//   // The array at the end of function call represents what state changes will trigger this effect\n//   // In this case, whenever the value of `walletConnected` changes - this effect will be called\n//   useEffect(() => {\n//     // if wallet is not connected, create a new instance of Web3Modal and connect the MetaMask wallet\n//     if (!walletConnected) {\n//       // Assign the Web3Modal class to the reference object by setting it's `current` value\n//       // The `current` value is persisted throughout as long as this page is open\n//       web3ModalRef.current = new Web3Modal({\n//         network: \"rinkeby\",\n//         providerOptions: {},\n//         disableInjectedProvider: false,\n//       });\n//       // setWeb3ModalState(() => new Web3Modal({\n//       //   network: \"rinkeby\",\n//       //   providerOptions: {},\n//       //   disableInjectedProvider: false,\n//       // }));\n//       connectWallet();\n//       console.log('useEffect running to connect wallet')\n//     }\n//     console.log('useEffect running')\n//   }, [walletConnected]);\n//   return (\n//     <div>\n//       <Head>\n//         <title>Whitelist Dapp</title>\n//         <meta name=\"description\" content=\"Whitelist-Dapp\" />\n//         <link rel=\"icon\" href=\"/favicon.ico\" />\n//       </Head>\n//       <div className={styles.main}>\n//         <div>\n//           <h1 className={styles.title}>Welcome to Crypto Devs!</h1>\n//           <div className={styles.description}>\n//             Its an NFT collection for developers in Crypto.\n//           </div>\n//           <div className={styles.description}>\n//             {numberOfWhitelisted} have already joined the Whitelist\n//           </div>\n//           {renderButton()}\n//         </div>\n//         <div>\n//           <img className={styles.image} src=\"./crypto-devs.svg\" />\n//         </div>\n//       </div>\n//       <footer className={styles.footer}>\n//         Made with &#10084; by Crypto Devs\n//       </footer>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\nfunction Home() {\n    // walletConnected keep track of whether the user's wallet is connected or not\n    const { 0: walletConnected , 1: setWalletConnected  } = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n    // joinedWhitelist keeps track of whether the current metamask address has joined the Whitelist or not\n    const { 0: joinedWhitelist , 1: setJoinedWhitelist  } = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n    // loading is set to true when we are waiting for a transaction to get mined\n    const { 0: loading , 1: setLoading  } = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n    // numberOfWhitelisted tracks the number of addresses's whitelisted\n    const { 0: numberOfWhitelisted , 1: setNumberOfWhitelisted  } = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(0);\n    // Create a reference to the Web3 Modal (used for connecting to Metamask) which persists as long as the page is open\n    const web3ModalRef = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)();\n    /**\n   * Returns a Provider or Signer object representing the Ethereum RPC with or without the\n   * signing capabilities of metamask attached\n   *\n   * A `Provider` is needed to interact with the blockchain - reading transactions, reading balances, reading state, etc.\n   *\n   * A `Signer` is a special type of Provider used in case a `write` transaction needs to be made to the blockchain, which involves the connected account\n   * needing to make a digital signature to authorize the transaction being sent. Metamask exposes a Signer API to allow your website to\n   * request signatures from the user using Signer functions.\n   *\n   * @param {*} needSigner - True if you need the signer, default false otherwise\n   */ const getProviderOrSigner = async (needSigner = false)=>{\n        // Connect to Metamask\n        // Since we store `web3Modal` as a reference, we need to access the `current` value to get access to the underlying object\n        const provider = await web3ModalRef.current.connect();\n        const web3Provider = new ethers__WEBPACK_IMPORTED_MODULE_3__.providers.Web3Provider(provider);\n        // If user is not connected to the Rinkeby network, let them know and throw an error\n        const { chainId  } = await web3Provider.getNetwork();\n        if (chainId !== 4) {\n            window.alert(\"Change the network to Rinkeby\");\n            throw new Error(\"Change network to Rinkeby\");\n        }\n        if (needSigner) {\n            const signer = web3Provider.getSigner();\n            return signer;\n        }\n        return web3Provider;\n    };\n    /**\n   * addAddressToWhitelist: Adds the current connected address to the whitelist\n   */ const addAddressToWhitelist = async ()=>{\n        try {\n            // We need a Signer here since this is a 'write' transaction.\n            const signer = await getProviderOrSigner(true);\n            // Create a new instance of the Contract with a Signer, which allows\n            // update methods\n            const whitelistContract = new ethers__WEBPACK_IMPORTED_MODULE_3__.Contract(_constants__WEBPACK_IMPORTED_MODULE_5__.WHITELIST_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_5__.abi, signer);\n            // call the addAddressToWhitelist from the contract\n            const tx = await whitelistContract.addAddressToWhitelist();\n            setLoading(true);\n            // wait for the transaction to get mined\n            await tx.wait();\n            setLoading(false);\n            // get the updated number of addresses in the whitelist\n            await getNumberOfWhitelisted();\n            setJoinedWhitelist(true);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    /**\n   * getNumberOfWhitelisted:  gets the number of whitelisted addresses\n   */ const getNumberOfWhitelisted = async ()=>{\n        try {\n            // Get the provider from web3Modal, which in our case is MetaMask\n            // No need for the Signer here, as we are only reading state from the blockchain\n            const provider = await getProviderOrSigner();\n            // We connect to the Contract using a Provider, so we will only\n            // have read-only access to the Contract\n            const whitelistContract = new ethers__WEBPACK_IMPORTED_MODULE_3__.Contract(_constants__WEBPACK_IMPORTED_MODULE_5__.WHITELIST_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_5__.abi, provider);\n            // call the numAddressesWhitelisted from the contract\n            const _numberOfWhitelisted = await whitelistContract.numAddressesWhitelisted();\n            setNumberOfWhitelisted(_numberOfWhitelisted);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    /**\n   * checkIfAddressInWhitelist: Checks if the address is in whitelist\n   */ const checkIfAddressInWhitelist = async ()=>{\n        try {\n            // We will need the signer later to get the user's address\n            // Even though it is a read transaction, since Signers are just special kinds of Providers,\n            // We can use it in it's place\n            const signer = await getProviderOrSigner(true);\n            const whitelistContract = new ethers__WEBPACK_IMPORTED_MODULE_3__.Contract(_constants__WEBPACK_IMPORTED_MODULE_5__.WHITELIST_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_5__.abi, signer);\n            // Get the address associated to the signer which is connected to  MetaMask\n            const address = await signer.getAddress();\n            // call the whitelistedAddresses from the contract\n            const _joinedWhitelist = await whitelistContract.whitelistedAddresses(address);\n            setJoinedWhitelist(_joinedWhitelist);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    /*\n    connectWallet: Connects the MetaMask wallet\n  */ const connectWallet = async ()=>{\n        try {\n            // Get the provider from web3Modal, which in our case is MetaMask\n            // When used for the first time, it prompts the user to connect their wallet\n            await getProviderOrSigner();\n            setWalletConnected(true);\n            checkIfAddressInWhitelist();\n            getNumberOfWhitelisted();\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    /*\n    renderButton: Returns a button based on the state of the dapp\n  */ const renderButton = ()=>{\n        if (walletConnected) {\n            if (joinedWhitelist) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().description),\n                    children: \"Thanks for joining the Whitelist!\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                    lineNumber: 388,\n                    columnNumber: 11\n                }, this);\n            } else if (loading) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n                    children: \"Loading...\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                    lineNumber: 393,\n                    columnNumber: 16\n                }, this);\n            } else {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: addAddressToWhitelist,\n                    className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n                    children: \"Join the Whitelist\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                    lineNumber: 396,\n                    columnNumber: 11\n                }, this);\n            }\n        } else {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: connectWallet,\n                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n                children: \"Connect your wallet\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                lineNumber: 403,\n                columnNumber: 9\n            }, this);\n        }\n    };\n    // useEffects are used to react to changes in state of the website\n    // The array at the end of function call represents what state changes will trigger this effect\n    // In this case, whenever the value of `walletConnected` changes - this effect will be called\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        // if wallet is not connected, create a new instance of Web3Modal and connect the MetaMask wallet\n        if (!walletConnected) {\n            // Assign the Web3Modal class to the reference object by setting it's `current` value\n            // The `current` value is persisted throughout as long as this page is open\n            web3ModalRef.current = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())({\n                network: \"rinkeby\",\n                providerOptions: {},\n                disableInjectedProvider: false\n            });\n            connectWallet();\n        }\n    }, [\n        walletConnected\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Whitelist Dapp\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                        lineNumber: 430,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: \"Whitelist-Dapp\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                        lineNumber: 431,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"/favicon.ico\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                        lineNumber: 432,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                lineNumber: 429,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().main),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().title),\n                                children: \"Welcome to Crypto Devs!\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                                lineNumber: 436,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().description),\n                                children: \"Its an NFT collection for developers in Crypto.\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                                lineNumber: 437,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().description),\n                                children: [\n                                    numberOfWhitelisted,\n                                    \" have already joined the Whitelist\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                                lineNumber: 440,\n                                columnNumber: 11\n                            }, this),\n                            renderButton()\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                        lineNumber: 435,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                            className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().image),\n                            src: \"./crypto-devs.svg\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                            lineNumber: 446,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                        lineNumber: 445,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                lineNumber: 434,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"footer\", {\n                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().footer),\n                children: \"Made with ❤ by Crypto Devs\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n                lineNumber: 450,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\Whitelist-Dapp\\\\hardhat-tutorial\\\\myApps\\\\pages\\\\index.js\",\n        lineNumber: 428,\n        columnNumber: 5\n    }, this);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ }),

/***/ "ethers":
/*!*************************!*\
  !*** external "ethers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("ethers");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "web3modal":
/*!****************************!*\
  !*** external "web3modal" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("web3modal");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.js"));
module.exports = __webpack_exports__;

})();